local player = game:GetService("Players").LocalPlayer
local gui = player:WaitForChild("PlayerGui")

-- Функция для показа уведомления
local function showNotification(text)
    local notification = Instance.new("TextLabel")
    notification.Name = "ScriptNotification"
    notification.Text = text
    notification.TextColor3 = Color3.new(1, 1, 1)
    notification.TextSize = 18
    notification.Font = Enum.Font.SourceSansBold
    notification.BackgroundColor3 = Color3.new(0, 0, 0)
    notification.BackgroundTransparency = 0.5
    notification.Size = UDim2.new(0, 200, 0, 50)
    notification.Position = UDim2.new(1, -210, 1, -60)
    notification.AnchorPoint = Vector2.new(1, 1)
    notification.Parent = gui
    
    -- Анимация плавного исчезновения
    spawn(function()
        wait(3)
        for i = 0.5, 1, 0.05 do
            notification.BackgroundTransparency = i
            notification.TextTransparency = i
            wait(0.05)
        end
        notification:Destroy()
    end)
end

-- Показываем уведомление о загрузке
showNotification("⚡ Tackle Script\nУспешно загружен!")

-- Удаляем старый GUI если есть
if gui:FindFirstChild("MobileControls") then
    gui.MobileControls:Destroy()
end

-- Остальной код скрипта (создание кнопок и функционал) остается без изменений...
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "MobileControls"
screenGui.ResetOnSpawn = false
screenGui.Parent = gui

-- Стиль для кнопок
local buttonStyle = {
    Size = UDim2.new(0, 80, 0, 80),
    BackgroundTransparency = 0.3,
    TextColor3 = Color3.new(1, 1, 1),
    TextSize = 16,
    AnchorPoint = Vector2.new(0.5, 0.5),
    ZIndex = 10,
    AutoButtonColor = false
}

-- Создаем кнопки с разными цветами
local tackleBtn = Instance.new("TextButton")
tackleBtn.Name = "TACKLE"
tackleBtn.Text = "TACKLE"
tackleBtn.BackgroundColor3 = Color3.fromRGB(0, 102, 255) -- Синий цвет
tackleBtn.Position = UDim2.new(0.2, 0, 0.8, 0)
tackleBtn.Parent = screenGui

local teleportBtn = Instance.new("TextButton")
teleportBtn.Name = "TELEPORT"
teleportBtn.Text = "TELEPORT"
teleportBtn.BackgroundColor3 = Color3.fromRGB(255, 60, 60) -- Красный цвет
teleportBtn.Position = UDim2.new(0.4, 0, 0.8, 0)
teleportBtn.Parent = screenGui

-- Применяем общий стиль к кнопкам
for _, btn in pairs({tackleBtn, teleportBtn}) do
    for prop, value in pairs(buttonStyle) do
        if prop ~= "BackgroundColor3" then
            btn[prop] = value
        end
    end
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(1, 0)
    corner.Parent = btn
    
    btn.MouseButton1Down:Connect(function()
        btn.BackgroundTransparency = 0.6
    end)
    
    btn.MouseButton1Up:Connect(function()
        btn.BackgroundTransparency = 0.3
    end)
end

-- Функция Tackle
local function doTackle()
    local target = workspace:FindFirstChild("Ball") or workspace:FindFirstChildOfClass("BasePart")
    local remotePaths = {game:GetService("ReplicatedStorage"), player.PlayerGui, player.Character}
    
    for _, location in pairs(remotePaths) do
        if location then
            for _, remote in pairs(location:GetDescendants()) do
                if remote:IsA("RemoteEvent") and (remote.Name:find("Tackle") or remote.Name:find("Hitbox")) then
                    pcall(remote.FireServer, remote, target)
                end
            end
        end
    end
end

-- Функция телепорта с учетом команды
local function doTeleport()
    pcall(function()
        local character = player.Character
        if not character then return end
        
        local hrp = character:FindFirstChild("HumanoidRootPart")
        if not hrp then return end
        
        local team = player.Team and player.Team.Name or "Default"
        local targetPosition = team == "Red" and Vector3.new(-2263.6, -25.5, 1029.0)
                          or team == "Blue" and Vector3.new(-2839.7, -25.5, 1029.6)
                          or Vector3.new(-2238.1218, -25.3756, 1050.0332)
        
        hrp.CFrame = CFrame.new(targetPosition)
    end)
end

-- Привязываем функции
tackleBtn.MouseButton1Click:Connect(doTackle)
teleportBtn.MouseButton1Click:Connect(doTeleport)

-- Система перемещения кнопок
local function makeDraggable(btn)
    local dragging, dragInput, dragStart, startPos
    
    btn.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = btn.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    btn.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)
    
    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if dragging and input == dragInput then
            local delta = input.Position - dragStart
            btn.Position = UDim2.new(
                startPos.X.Scale, 
                startPos.X.Offset + delta.X, 
                startPos.Y.Scale, 
                startPos.Y.Offset + delta.Y
            )
        end
    end)
end

makeDraggable(tackleBtn)
makeDraggable(teleportBtn)
